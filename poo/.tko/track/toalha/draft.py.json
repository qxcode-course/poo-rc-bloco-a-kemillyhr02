{
    "patches": [
        {
            "label": "2025-09-17_14-11-37",
            "content": "@@ -1,30 +1,20 @@\n-print(%22scrr nao aguento mais%22)\n+%22caramba que %C3%A9 isso%22\n",
            "lines": "1"
        },
        {
            "label": "2025-09-17_14-14-34",
            "content": "@@ -1,970 +1,30 @@\n-class Towel:%0A    def __init__(self,color:str, size:str):%0A        self.color= color%0A        self.size= size%0A        self.wetness= 0%0A%0A    def dry(self, amout:int):%0A        if self.wetness==self.getMaxWetness():%0A            print(%22umidade ja esta no maximo%22)%0A            return%0A        %0A        self.wetness+=amout%0A        if self.wetness%3E=self.getMaxWetness():%0A            self.wetness=self.getMaxWetness()%0A            print(%22umidade chegou no maximo%22)%0A        %0A%0A    def wringOut(self):%0A        self.wetness=0%0A%0A    def getMaxWetness(self):%0A        if self.size==%22P%22:%0A            return 10%0A        elif self.size==%22M%22:%0A            return 20 %0A        else :%0A            return 30%0A    %0A    def isDry(self):%0A        if self.wetness==0:%0A            return True %0A        else:%0A            return False %0A%0A    def __str__(self):%0A        return f%22cor:%7Bself.color%7D, tamanho:%7Bself.size%7D, umidade:%7Bself.wetness%7D%22%0A%0A%0Acor = %22preto%22%0Atamanho = %22P%22%0Atowel = Towel(cor, tamanho)%0A%0Aprint(towel\n+print(%22scrr nao aguento mais%22\n )\n",
            "lines": "1"
        },
        {
            "label": "2025-09-18_12-06-36",
            "content": "@@ -580,32 +580,34 @@\n turn 10%0A        \n+el\n if self.size==%22M\n@@ -644,25 +644,13 @@\n     \n-if self.size==%22G%22\n+else \n :%0A  \n@@ -673,25 +673,8 @@\n  30%0A\n-        return 0%0A\n     \n@@ -896,308 +896,54 @@\n s%7D%22%0A\n-def main():%0A    towel: Towel=Towel() # type: ignore%0A    while True :%0A        line: str=input()%0A        args: list%5Bstr%5D= line.split(%22 %22) %0A%0A        if args%5B0%5D==%22end%22:%0A            break%0A        elif args%5B0%5D==%22new%22:%0A            color:str= args%5B1%5D%0A            size: str= args%5B2%5D%0A            \n+%0A%0Acor = %22preto%22%0Atamanho = %22P%22%0A\n towel\n-=\n+ = \n Towel(co\n lor,\n@@ -942,153 +942,29 @@\n l(co\n-lo\n r, \n-size)%0A        elif args%5B0%5D == %22show%22:%0A            print(towel)%0A        else :%0A            print(%22fail: comando n%C3%A3o encontrado%22)%0Amain() #passo 1%0A\n+tamanho)%0A%0Aprint(towel)\n",
            "lines": "43"
        },
        {
            "label": "2025-09-23_13-59-24",
            "content": "@@ -958,17 +958,24 @@\n wel(\n-%22 %22, %22 %22)\n+) # type: ignore\n %0A   \n@@ -1102,17 +1102,16 @@\n   break%0A\n-%0A\n         \n@@ -1162,16 +1162,16 @@\n args%5B1%5D%0A\n+\n         \n@@ -1197,111 +1197,8 @@\n %5B2%5D%0A\n-        elif  args%5B0%5D== %22dry%22:%0A            amount: int= int(args%5B1%5D)%0A            towel.dry(amount)    %0A\n     \n",
            "lines": "54"
        },
        {
            "label": "2025-09-23_14-10-31",
            "content": "class Towel:\n    def __init__(self,color:str, size:str):\n        self.color= color\n        self.size= size\n        self.wetness= 0\n\n    def dry(self, amout:int):\n        if self.wetness==self.getMaxWetness():\n            print(\"umidade ja esta no maximo\")\n            return\n        \n        self.wetness+=amout\n        if self.wetness>=self.getMaxWetness():\n            self.wetness=self.getMaxWetness()\n            print(\"umidade chegou no maximo\")\n        \n\n    def wringOut(self):\n        self.wetness=0\n\n    def getMaxWetness(self):\n        if self.size==\"P\":\n            return 10\n        if self.size==\"M\":\n            return 20 \n        if self.size==\"G\":\n            return 30\n        return 0\n    \n    def isDry(self):\n        if self.wetness==0:\n            return True \n        else:\n            return False \n\n    def __str__(self):\n        return f\"cor:{self.color}, tamanho:{self.size}, umidade:{self.wetness}\"\ndef main():\n    towel: Towel=Towel(\" \", \" \")\n    while True :\n        line: str=input()\n        args: list[str]= line.split(\" \") \n\n        if args[0]==\"end\":\n            break\n\n        elif args[0]==\"new\":\n            color:str= args[1]\n            size: str= args[2]\n        elif  args[0]== \"dry\":\n            amount: int= int(args[1])\n            towel.dry(amount)    \n            towel=Towel(color, size)\n        elif args[0] == \"show\":\n            print(towel)\n        else :\n            print(\"fail: comando n\u00e3o encontrado\")\nmain() #passo 1\n",
            "lines": "58"
        }
    ]
}